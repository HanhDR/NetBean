/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Baitapsocket;

import java.io.BufferedReader;
import java.io.File;
import java.net.InetAddress;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;

/**
 *
 * @author hanht
 */
public class frmsv extends javax.swing.JFrame {
 public class TuyenNhan1 extends Thread{
        public void run(){
            try {
                while(true){
                String st=ng.Nhan();
                String[] ds=st.split("[:]");
                String ipclient=ds[0];
                String cp=ds[1];
                if(cp.equals("/tm"))
                    ng.Gui("xlpt", ipclient, 5000);
                else if(cp.equals("/ht")){    
                    String ten=InetAddress.getLocalHost().getHostName();
                    ng.Gui(ten, ipclient, 5000);}
                else if(cp.startsWith("/+")){
                     String[]arrNUM=cp.split("[;]");                         
                    int sum=0,Max=Integer.MIN_VALUE,Min=Integer.MAX_VALUE;
                    for(int i=1;i<arrNUM.length;i++){
                    int num= Integer.parseInt(arrNUM[i]);
                    if(num>Max){ 
                        Max=num; 
                    }                  
                    if( num < Min){
                    Min=num;
                    }
                    sum+=num;
                }
                    ng.Gui("Tong:" +Integer.toString(sum),txtip.getText(), 5000);
                    ng.Gui("So lon nhat: " +Integer.toString(Max),txtip.getText(),5000);
                    ng.Gui("So nho nhat: " +Integer.toString(Min),txtip.getText(), 5000);
                    ng.Gui("So chu so client gui len: "+Integer.toString(arrNUM.length-1)+" So",txtip.getText(),5000);
                }
                else if(cp.equals("/xskt")) {
                    File f= new File("/D:\\xskt.txt");
                try {
                        BufferedReader br = Files.newBufferedReader(f.toPath(), StandardCharsets.UTF_8);
                        String s=null;
                        while(true){
                        s=br.readLine();
                        if(s==null)
                            break;
                        else 
                            ng.Gui(s, ipclient, 5000);}
                    } catch (Exception e) {
                    }
                }
                else if(cp.equals("/quit"))
                    ng.Gui("exit", ipclient, 5000);
                else if(cp.equals("/notepad")){
                Runtime rs=Runtime.getRuntime();
                rs.exec("notepad");
                }
                else if(cp.equals("/excel")){
                Runtime rs=Runtime.getRuntime();
                rs.exec("cmd /c start excel.exe");}
                else if(cp.equals("/shutdown")){
                    Runtime.getRuntime().exec("shutdown -s -t 0");
                }
                else if(cp.startsWith("/C")){
                
                }
                listsv.add(st);
                listsv.select(listsv.getItemCount()-1);
               
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            
           
        }
    }
    /**
     * Creates new form frmsv
     */
    public frmsv() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtip = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtport = new javax.swing.JTextField();
        listsv = new java.awt.List();
        txtgui = new javax.swing.JTextField();
        butsend = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("IP client");

        txtip.setText("127.0.0.1");
        txtip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtipActionPerformed(evt);
            }
        });

        jLabel2.setText("Port");

        txtport.setText("5000");

        txtgui.setText("jTextField3");

        butsend.setText("Send");
        butsend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butsendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(listsv, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtgui, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(butsend))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addComponent(txtip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(jLabel2)
                        .addGap(48, 48, 48)
                        .addComponent(txtport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listsv, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtgui, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butsend))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butsendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butsendActionPerformed
 try {
        NhanGui ng=new NhanGui();
        String ip=txtip.getText();
        int cong=Integer.parseInt(txtport.getText());
        String iplocal=InetAddress.getLocalHost().getHostAddress();
        String data= iplocal+":"+txtgui.getText();
        ng.Gui(data,ip,cong);
        } catch (Exception e) {
            e.printStackTrace();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_butsendActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            ng.MoCong(5001);
            TuyenNhan1 tn =new TuyenNhan1();
            tn.start();
        } catch (Exception e) {
            e.printStackTrace();
        }  // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void txtipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtipActionPerformed
NhanGui ng=new NhanGui();
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmsv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmsv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmsv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmsv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmsv().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butsend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private java.awt.List listsv;
    private javax.swing.JTextField txtgui;
    private javax.swing.JTextField txtip;
    private javax.swing.JTextField txtport;
    // End of variables declaration//GEN-END:variables
}
